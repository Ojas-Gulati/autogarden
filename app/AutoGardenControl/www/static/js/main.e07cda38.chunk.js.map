{"version":3,"sources":["Reuseables.js","App.js","logo.svg","index.js"],"names":["Post","props","begin","bind","succeed","fail","reset","state","loading","failed","success","this","setState","className","React","Component","Editable","editing","val","value","newediting","update","inpelem","onChange","event","target","onClick","toggleEdit","Flash","flash","flashtimeout","console","log","setTimeout","clearTimeout","icon","Popup","showPopup","hidePopup","fadingtimeout","fading_up","fading_down","faded","shown","hidden","style","children","ip5","ip6","searchIPS","cb","Promise","resolve","reject","iptobitarr","ipstr","split","map","x","ret","parseInt","retarr","i","push","process","networkresolution","ipsplit","ip","subnetsplit","subnet","switchers","j","length","numarr","k","subt","l","join","networkinterface","getWiFiIPAddress","ipinformation","err","ipSpace","rgbtohsv","r","g","b","arguments","h","max","Math","min","d","s","v","round","hsvtorgb","f","p","q","t","floor","millisecondsToStr","milliseconds","numberEnding","number","temp","years","days","hours","minutes","seconds","devicebyindex","garden","index","master","devices","timeout","ms","promise","timer","Error","then","catch","reason","makePostOptions","json","method","body","URLSearchParams","toString","headers","getOptions","isBoardname","response","substr","isSettings","JSON","parse","boardname","e","spread","getMoistureSetting","settings","moistureEnd","moistureBegin","lightsOn","lowlighting","highlighting","wateringOn","getForwardData","respdata","code","shift","contextval","globalStateContext","createContext","masterConnected","connInfo","connected","HeaderRow","showSettings","contextType","Device","updateConnInfo","updateSensorData","changelightingmode","startWatering","stopWatering","saveMoistureSettings","saveLightingSettings","saveAdvancedSettings","delete","datasync","createRef","settingsCPS","popup","_flashref","lightingposts","moistureposts","wateringposts","advancedposts","deletionpost","stringify","device","datainterval","setInterval","sensorinterval","clearInterval","fetch","lastip","text","updateDevice","finally","current","flashmaster","promisemaker","url","postjson","post","all","values","settingsmatches","processfunc","sensorarr","readings","temperature","parseFloat","moisture","sunlight","watering","cooldownleft","lightingtype","moisturepostjson","force","for","rsp","checkingTime","cooldown","loval","hival","ltype","lightingpostjson","lowvalue","highvalue","lowlightingr","lowlightingg","lowlightingb","highlightingr","highlightingg","highlightingb","finished","error","deviceslist","pop","entry","entdata","slice","mac","boardidx","removal","newgardens","context","gardens","idx","splice","updateGardens","visible","ref","humanname","color","checked","type","class","name","Garden","addNewDeviceStage","boardip","masterpassword","searchfounds","searchnum","setupconnslave","setuprstslave","setupaddtomaster","search","_editGardenPopup","_masterflashref","_connslavepost","_rstslavepost","_addtomasterpost","gardeninterval","searchingfound","searching","httpip","prevState","p1","p2","localip","macresponse","a","ssid","password","setwifires","isSlave","needtoadd","macaddress","addition","found","devicesCP","devicejson","newdevice","GardenList","App","storage","window","localStorage","getItem","setItem","_addDevicePopup","addBoard","setupConnectTo","setupWifiSettings","finishSetup","searchEnabledTimeout","_wifisetupflash","wificheckinterval","searchEnabled","searchbegun","addDeviceDivVisible","addDeviceSearch","addDeviceNew","addDeviceStage","connecting","wentwrong","sendingwififailed","wifiname","wifipwd","sendingrestart","complete","bname","settingsdoc","searchResults","ctx","boardbeingadded","boardbeingaddedErr","boardbeingaddedSuccess","retrievedData","saveState","searchresults","time","settingsPromise","macPromise","devicesPromise","results","masterboard","toUpperCase","devicesarr","promises","dSplit","currmac","dBoardname","res","sentwifi","wifistatusnoconn","wifistatusconn","sendingwifi","statectx","addDeviceSearchDiv","setLED","addDeviceNewDiv","Provider","renderReactDom","ReactDOM","render","document","getElementById","cordova","addEventListener"],"mappings":"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","file":"static/js/main.e07cda38.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\n\r\nexport class Post extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.begin = this.begin.bind(this);\r\n\t\tthis.succeed = this.succeed.bind(this);\r\n\t\tthis.fail = this.fail.bind(this);\r\n\t\tthis.reset = this.reset.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tloading: false,\r\n\t\t\tfailed: false,\r\n\t\t\tsuccess: false\r\n\t\t};\r\n\t}\r\n\r\n\tbegin() {\r\n\t\tthis.setState({\r\n\t\t\tloading: true,\r\n\t\t\tfailed: false,\r\n\t\t\tsuccess: false\r\n\t\t});\r\n\t}\r\n\r\n\tsucceed() {\r\n\t\tthis.setState({\r\n\t\t\tloading: false,\r\n\t\t\tfailed: false,\r\n\t\t\tsuccess: true\r\n\t\t});\r\n\t}\r\n\r\n\tfail() {\r\n\t\tthis.setState({\r\n\t\t\tloading: false,\r\n\t\t\tfailed: true,\r\n\t\t\tsuccess: false\r\n\t\t});\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.setState({\r\n\t\t\tloading: false,\r\n\t\t\tfailed: false,\r\n\t\t\tsuccess: false\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{ this.state.loading ? <i className=\"material-icons\">sync</i> : null}\r\n\t\t\t\t{ this.state.failed ? <i className=\"material-icons text-danger\">close</i> : null}\r\n\t\t\t\t{ this.state.success ? <i className=\"material-icons text-success\">done</i> : null}\r\n\t\t\t</span>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport class Editable extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tediting: false,\r\n\t\t\tval: props.value\r\n\t\t};\r\n\t}\r\n\r\n\ttoggleEdit(val) {\r\n\t\tlet newediting = !this.state.editing;\r\n\t\tif (val === true || val === false) {\r\n\t\t\tnewediting = val;\r\n\t\t}\r\n\r\n\t\tthis.setState({ editing: newediting })\r\n\r\n\t\tif (!newediting) {\r\n\t\t\tthis.props.update(this.state.val);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet inpelem = null;\r\n\t\tif (this.state.editing) {\r\n\t\t\tinpelem = (<input onChange={(event) => { this.setState({ val: event.target.value }) }} value={this.state.val} />)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinpelem = this.props.value\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<span>{inpelem} <i className=\"material-icons text-muted\" onClick={() => { this.toggleEdit(null) }}>{this.state.editing ? \"check\" : \"edit\"}</i></span>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class Flash extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tflash: false\r\n\t\t}\r\n\t\tthis.flashtimeout;\r\n\t\tthis.flash = this.flash.bind(this);\r\n\t}\r\n\r\n\tflash() {\r\n\t\tconsole.log(\"flashed\")\r\n\t\tthis.setState({\r\n\t\t\tflash: true\r\n\t\t}, () => {\r\n\t\t\tthis.flashtimeout = setTimeout(() => {\r\n\t\t\t\tthis.setState({ flash: false });\r\n\t\t\t}, 50)\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearTimeout(this.flashtimeout);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (<i className={\"material-icons \" + (this.state.flash ? \"\" : \"flash-fade\")}>{this.props.icon}</i>);\r\n\t}\r\n}\r\n\r\nexport class Popup extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.showPopup = this.showPopup.bind(this);\r\n\t\tthis.hidePopup = this.hidePopup.bind(this);\r\n\t\tthis.fadingtimeout = null;\r\n\t\tthis.state = {\r\n\t\t\tfading_up: false,\r\n\t\t\tfading_down: true,\r\n\t\t\tfaded: true\r\n\t\t}\r\n\t}\r\n\r\n\tshowPopup() {\r\n\t\tif (this.state.faded) {\r\n\t\t\tthis.setState({ faded: false, fading_down: true, fading_up: false });\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({ faded: false, fading_up: true, fading_down: false });\r\n\t\t\t}, 50);\r\n\t\t}\r\n\t\tif (this.props.shown) {\r\n\t\t\tthis.props.shown();\r\n\t\t}\r\n\t}\r\n\r\n\thidePopup() {\r\n\t\tif (!this.state.faded) {\r\n\t\t\tthis.setState({ faded: false, fading_up: true, fading_down: false });\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({ faded: false, fading_down: true, fading_up: false });\r\n\t\t\t}, 50);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({ faded: true, fading_down: true, fading_up: false });\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t\tif (this.props.hidden) {\r\n\t\t\tthis.props.hidden();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"popup \" + (this.state.faded ? \"ag-faded\" : \"\") + \" \" + (this.state.fading_up ? \"ag-fading_up\" : \"\") + \" \" + (this.state.fading_down ? \"ag-fading_down\" : \"\")}>\r\n\t\t\t\t<div className=\"popupX\">\r\n\t\t\t\t\t<i className=\"float-right ml-auto material-icons cursor-pointer font-size-medium\" onClick={this.hidePopup}>close</i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"overflow-overlay floating-scrollbar p-2\" style={{\"max-height\": \"88vh\"}}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { useRef } from 'react';\nimport { Editable, Flash, Popup, Post } from './Reuseables.js';\nimport logo from './logo.svg';\nimport './App.css';\n\nlet ip5 = \"http://192.168.5.1/\"; // ly 5up\nlet ip6 = \"http://192.168.6.1/\"; // ly 5up\n\nfunction searchIPS(cb) {\n\treturn new Promise((resolve, reject) => {\n\t\tlet iptobitarr = (ipstr) => {\n\t\t\tlet toreturn = ipstr.split(\".\");\n\t\t\treturn toreturn.map((x) => {\n\t\t\t\tlet ret = parseInt(x);\n\t\t\t\tlet retarr = [];\n\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\tretarr.push((ret & (1 << i)) >> i);\n\t\t\t\t}\n\t\t\t\treturn retarr;\n\t\t\t});\n\t\t}\n\n\t\tlet process = (networkresolution) => {\n\t\t\t// split up stuff\n\t\t\tlet ipsplit = iptobitarr(networkresolution.ip);\n\t\t\tlet subnetsplit = iptobitarr(networkresolution.subnet);\n\n\t\t\tlet switchers = [];\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 8; j++) {\n\t\t\t\t\tif (subnetsplit[i][j] == 0) {\n\t\t\t\t\t\tswitchers.push([i, j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < (1 << switchers.length); i++) {\n\t\t\t\tfor (let j = 0; j < switchers.length; j++) {\n\t\t\t\t\tipsplit[switchers[j][0]][switchers[j][1]] = (((1 << j) & i) != 0) ? 1 : 0;\n\t\t\t\t}\n\t\t\t\t// construct it back\n\t\t\t\tlet numarr = [];\n\t\t\t\tfor (let k = 0; k < 4; k++) {\n\t\t\t\t\tlet subt = 0;\n\t\t\t\t\tfor (let l = 0; l < 8; l++) {\n\t\t\t\t\t\tsubt = subt | (ipsplit[k][l] << l);\n\t\t\t\t\t}\n\t\t\t\t\tnumarr.push(subt);\n\t\t\t\t}\n\t\t\t\tcb(\"http://\" + numarr.join(\".\") + \"/\");\n\t\t\t}\n\t\t}\n\n\t\tnetworkinterface.getWiFiIPAddress((ipinformation) => resolve(process(ipinformation)), (err) => {\n\t\t\tconsole.log(err);\n\t\t\tresolve(process({\n\t\t\t\tip: \"0.0.0.0\",\n\t\t\t\tsubnet: \"255.255.255.255\"\n\t\t\t}));\n\t\t})\n\t});\n}\n\nfunction ipSpace() {\n\treturn new Promise((resolve, reject) => {\n\t\tlet iptobitarr = (ipstr) => {\n\t\t\tlet toreturn = ipstr.split(\".\");\n\t\t\treturn toreturn.map((x) => {\n\t\t\t\tlet ret = parseInt(x);\n\t\t\t\tlet retarr = [];\n\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\tretarr.push((ret & (1 << i)) >> i);\n\t\t\t\t}\n\t\t\t\treturn retarr;\n\t\t\t});\n\t\t}\n\n\t\tlet process = (networkresolution) => {\n\t\t\t// split up stuff\n\t\t\tlet subnetsplit = iptobitarr(networkresolution.subnet);\n\n\t\t\tlet switchers = [];\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 8; j++) {\n\t\t\t\t\tif (subnetsplit[i][j] == 0) {\n\t\t\t\t\t\tswitchers.push([i, j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (1 << switchers.length);\n\t\t}\n\t\tnetworkinterface.getWiFiIPAddress((ipinformation) => resolve(process(ipinformation)), (err) => {\n\t\t\tconsole.log(err);\n\t\t\tresolve(process({\n\t\t\t\tip: \"0.0.0.0\",\n\t\t\t\tsubnet: \"255.255.255.255\"\n\t\t\t}));\n\t\t})\n\t});\n}\n\nfunction rgbtohsv(r) {\n\tlet g, b;\n\tif (arguments.length === 1) {\n\t\tg = r.g, b = r.b, r = r.r;\n\t}\n\tvar max = Math.max(r, g, b), min = Math.min(r, g, b),\n\t\td = max - min,\n\t\th,\n\t\ts = (max === 0 ? 0 : d / max),\n\t\tv = max / 255;\n\n\tswitch (max) {\n\t\tcase min: h = 0; break;\n\t\tcase r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\n\t\tcase g: h = (b - r) + d * 2; h /= 6 * d; break;\n\t\tcase b: h = (r - g) + d * 4; h /= 6 * d; break;\n\t}\n\n\treturn {\n\t\tr: Math.round(h * 255),\n\t\tg: Math.round(s * 255),\n\t\tb: Math.round(v * 255)\n\t};\n}\n\nfunction hsvtorgb(h) {\n\tvar r, g, b, i, f, p, q, t, s, v;\n\tif (arguments.length === 1) {\n\t\ts = h.g, v = h.b, h = h.r;\n\t}\n\th /= 255;\n\ts /= 255;\n\tv /= 255;\n\ti = Math.floor(h * 6);\n\tf = h * 6 - i;\n\tp = v * (1 - s);\n\tq = v * (1 - f * s);\n\tt = v * (1 - (1 - f) * s);\n\tswitch (i % 6) {\n\t\tcase 0: r = v, g = t, b = p; break;\n\t\tcase 1: r = q, g = v, b = p; break;\n\t\tcase 2: r = p, g = v, b = t; break;\n\t\tcase 3: r = p, g = q, b = v; break;\n\t\tcase 4: r = t, g = p, b = v; break;\n\t\tcase 5: r = v, g = p, b = q; break;\n\t}\n\n\treturn {\n\t\tr: Math.round(r * 255),\n\t\tg: Math.round(g * 255),\n\t\tb: Math.round(b * 255)\n\t};\n}\n\nfunction millisecondsToStr(milliseconds) {\n\t// TIP: to find current time in milliseconds, use:\n\t// var  current_time_milliseconds = new Date().getTime();\n\n\tfunction numberEnding(number) {\n\t\treturn (number > 1) ? 's' : '';\n\t}\n\n\tvar temp = Math.floor(milliseconds / 1000);\n\tvar years = Math.floor(temp / 31536000);\n\tif (years) {\n\t\treturn years + ' year' + numberEnding(years);\n\t}\n\t//TODO: Months! Maybe weeks? \n\tvar days = Math.floor((temp %= 31536000) / 86400);\n\tif (days) {\n\t\treturn days + ' day' + numberEnding(days);\n\t}\n\tvar hours = Math.floor((temp %= 86400) / 3600);\n\tif (hours) {\n\t\treturn hours + ' hour' + numberEnding(hours);\n\t}\n\tvar minutes = Math.floor((temp %= 3600) / 60);\n\tif (minutes) {\n\t\treturn minutes + ' minute' + numberEnding(minutes);\n\t}\n\tvar seconds = temp % 60;\n\tif (seconds) {\n\t\treturn seconds + ' second' + numberEnding(seconds);\n\t}\n\treturn 'less than a second'; //'just now' //or other string you like;\n}\n\nfunction devicebyindex(garden, index) {\n\tif (index == 0) {\n\t\treturn garden.master;\n\t}\n\telse {\n\t\treturn garden.devices[index - 1]\n\t}\n}\n\nfunction timeout(ms, promise) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst timer = setTimeout(() => {\n\t\t\treject(new Error('TIMEOUT'))\n\t\t}, ms)\n\n\t\tpromise\n\t\t\t.then(value => {\n\t\t\t\tclearTimeout(timer)\n\t\t\t\tresolve(value)\n\t\t\t})\n\t\t\t.catch(reason => {\n\t\t\t\tclearTimeout(timer)\n\t\t\t\treject(reason)\n\t\t\t})\n\t})\n}\n\nfunction makePostOptions(json) {\n\treturn {\n\t\tmethod: 'post',\n\t\tbody: new URLSearchParams(json).toString(),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t'Origin': '',\n\t\t\t'Referer': ''\n\t\t}\n\t};\n}\n\nlet getOptions = {\n\tmethod: 'get',\n\theaders: {\n\t\t'Origin': '',\n\t\t'Referer': ''\n\t}\n}\n\nfunction isBoardname(response) {\n\treturn (response.length == \"AutoGarden-XXXXXXXX\".length && response.substr(0, \"AutoGarden-\".length) == \"AutoGarden-\");\n}\n\nfunction isSettings(response) {\n\ttry {\n\t\treturn isBoardname(JSON.parse(response).boardname);\n\t}\n\tcatch (e) {\n\t\treturn false;\n\t}\n}\n\nlet spread = 100;\nfunction getMoistureSetting(settings) {\n\tif (settings.moistureEnd < 4095 - spread) {\n\t\treturn settings.moistureEnd - spread;\n\t}\n\telse {\n\t\treturn settings.moistureBegin + spread;\n\t}\n}\n\nfunction lightsOn(settings) {\n\t// console.log(settings);\n\ttry {\n\t\tif (settings.lowlighting.r == 0 && settings.lowlighting.g == 0 && settings.lowlighting.b == 0 &&\n\t\t\tsettings.highlighting.r == 0 && settings.highlighting.g == 0 && settings.highlighting.b == 0) {\n\t\t\treturn false\n\t\t}\n\t}\n\tcatch (e) { }\n\treturn true;\n}\n\nfunction wateringOn(settings) {\n\ttry {\n\t\treturn (settings.moistureBegin < 4096)\n\t}\n\tcatch (e) { }\n\treturn true;\n}\n\nfunction getForwardData(response) {\n\tlet respdata = response.split(\"\\n\");\n\treturn {\n\t\tcode: parseInt(respdata.shift()),\n\t\tresponse: respdata.join(\"\\n\")\n\t}\n}\n\nlet contextval = {\n\t\"gardens\": [\n\t\t{\n\t\t\t\"name\": \"New Garden\",\n\t\t\t\"master\": {\n\t\t\t\t\"master\": true,\n\t\t\t\t\"humanname\": \"AutoGarden-HEV1OE4M\",\n\t\t\t\t\"boardname\": \"AutoGarden-HEV1OE4M\",\n\t\t\t\t\"lastip\": \"http://192.168.1.181/\",\n\t\t\t\t\"mac\": \"C4:4F:33:75:A7:31\",\n\t\t\t\t\"connInfo\": {\n\t\t\t\t\t\"connected\": true\n\t\t\t\t},\n\t\t\t\t\"settings\": {\n\t\t\t\t\t\"boardname\": \"AutoGarden-HEV1OE4M\",\n\t\t\t\t\t\"version\": \"0.1\",\n\t\t\t\t\t\"isSlave\": false,\n\t\t\t\t\t\"hasWiFi\": true,\n\t\t\t\t\t\"moistureBegin\": 500,\n\t\t\t\t\t\"moistureEnd\": 2000,\n\t\t\t\t\t\"checkingTime\": 1,\n\t\t\t\t\t\"cooldown\": 2,\n\t\t\t\t\t\"lightingtype\": 98,\n\t\t\t\t\t\"lowlighting\": {\n\t\t\t\t\t\t\"r\": 255,\n\t\t\t\t\t\t\"g\": 0,\n\t\t\t\t\t\t\"b\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"highlighting\": {\n\t\t\t\t\t\t\"r\": 0,\n\t\t\t\t\t\t\"g\": 0,\n\t\t\t\t\t\t\"b\": 255\n\t\t\t\t\t},\n\t\t\t\t\t\"lowvalue\": 100,\n\t\t\t\t\t\"highvalue\": 4096\n\t\t\t\t},\n\t\t\t\t\"readings\": {\n\t\t\t\t\t\"moisture\": 0,\n\t\t\t\t\t\"temperature\": 0,\n\t\t\t\t\t\"sunlight\": 0\n\t\t\t\t},\n\t\t\t\t\"watering\": {\n\t\t\t\t\t\"watering\": false,\n\t\t\t\t\t\"reason\": '_',\n\t\t\t\t\t\"cooldownleft\": -1\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"devices\": [\n\t\t\t\t{\n\t\t\t\t\t\"master\": false,\n\t\t\t\t\t\"humanname\": \"AutoGarden-ST31LMY3\",\n\t\t\t\t\t\"boardname\": \"AutoGarden-ST31LMY3\",\n\t\t\t\t\t\"lastip\": null,\n\t\t\t\t\t\"mac\": \"C4:4F:33:75:7A:B1\",\n\t\t\t\t\t\"connInfo\": {\n\t\t\t\t\t\t\"connected\": true\n\t\t\t\t\t},\n\t\t\t\t\t\"settings\": {\n\t\t\t\t\t\t\"boardname\": \"AutoGarden-ST31LMY3\",\n\t\t\t\t\t\t\"version\": \"0.1\",\n\t\t\t\t\t\t\"isSlave\": true,\n\t\t\t\t\t\t\"hasWiFi\": true,\n\t\t\t\t\t\t\"moistureBegin\": 5000,\n\t\t\t\t\t\t\"moistureEnd\": 5000,\n\t\t\t\t\t\t\"checkingTime\": 5,\n\t\t\t\t\t\t\"cooldown\": 60,\n\t\t\t\t\t\t\"lightingtype\": 115,\n\t\t\t\t\t\t\"lowlighting\": {\n\t\t\t\t\t\t\t\"r\": 0,\n\t\t\t\t\t\t\t\"g\": 0,\n\t\t\t\t\t\t\t\"b\": 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"highlighting\": {\n\t\t\t\t\t\t\t\"r\": 0,\n\t\t\t\t\t\t\t\"g\": 0,\n\t\t\t\t\t\t\t\"b\": 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lowvalue\": 0,\n\t\t\t\t\t\t\"highvalue\": 4096\n\t\t\t\t\t},\n\t\t\t\t\t\"readings\": {\n\t\t\t\t\t\t\"moisture\": 0,\n\t\t\t\t\t\t\"temperature\": 0,\n\t\t\t\t\t\t\"sunlight\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"watering\": {\n\t\t\t\t\t\t\"watering\": false,\n\t\t\t\t\t\t\"reason\": '_',\n\t\t\t\t\t\t\"cooldownleft\": -1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"networkSSID\": \"VFConnect\",\n\t\"slide\": \"Home\"\n};\nconst globalStateContext = React.createContext(contextval);\n\nfunction masterConnected(garden) {\n\treturn garden.master.connInfo.connected;\n}\n\nclass HeaderRow extends React.Component {\n\tstatic contextType = globalStateContext;\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header-box p-3\">\n\t\t\t\t<div className=\"row m-0 align-items-center h-100\">\n\t\t\t\t\t<div className=\"col-auto\">\n\t\t\t\t\t\t<h4 className=\"m-0\">AutoGarden v0.1</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-auto ml-auto text-muted\">\n\t\t\t\t\t\t<i onClick={this.props.showSettings} className=\"material-icons\">settings</i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Device extends React.Component {\n\tstatic contextType = globalStateContext;\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.updateConnInfo = this.updateConnInfo.bind(this);\n\t\tthis.updateSensorData = this.updateSensorData.bind(this);\n\t\tthis.changelightingmode = this.changelightingmode.bind(this);\n\t\tthis.startWatering = this.startWatering.bind(this);\n\t\tthis.stopWatering = this.stopWatering.bind(this);\n\t\tthis.saveMoistureSettings = this.saveMoistureSettings.bind(this);\n\t\tthis.saveLightingSettings = this.saveLightingSettings.bind(this);\n\t\tthis.saveAdvancedSettings = this.saveAdvancedSettings.bind(this);\n\t\tthis.delete = this.delete.bind(this);\n\t\tthis.datasync = React.createRef();\n\t\tthis.settingsCPS\n\t\tthis.popup = React.createRef();\n\t\tthis._flashref = React.createRef();\n\t\tthis.lightingposts = React.createRef();\n\t\tthis.moistureposts = React.createRef();\n\t\tthis.wateringposts = React.createRef();\n\t\tthis.advancedposts = React.createRef();\n\t\tthis.deletionpost = React.createRef();\n\t\tthis.state = {\n\t\t\tsettingsCPS: JSON.parse(JSON.stringify(this.props.device.settings))\n\t\t}\n\t\tthis.datainterval = setInterval(() => {\n\t\t\t// try to access the master board\n\t\t\t// in other words, use our update gardens to update connection info\n\t\t\t// TODO: if lastip doesnt match, silently run a scan to update the ip\n\t\t\tthis.updateConnInfo();\n\t\t}, (this.props.index == 0 ? 10000 : 15000));\n\t\tthis.sensorinterval = 0;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconsole.log(\"UNMOUNTING\");\n\t\tclearInterval(this.datainterval);\n\t\tclearInterval(this.sensorinterval);\n\t}\n\n\n\tupdateConnInfo() {\n\t\t// TODO: support for local connections\n\t\t// TODO: dry\n\t\tconsole.log(\"conninfoupdated\")\n\t\tif (this.props.index == 0) {\n\t\t\ttimeout(5000, fetch(this.props.master.lastip + \"settings\", getOptions).then(response => response.text()).then((response) => {\n\t\t\t\tconsole.log(\"fetchsuccess\");\n\t\t\t\tconsole.log(response);\n\t\t\t\tconsole.log(this.props.master);\n\t\t\t\tthis.props.device.connInfo.connected = isSettings(response) && JSON.parse(response).boardname == this.props.master.boardname;\n\t\t\t\tthis.props.master.settings = JSON.parse(response);\n\t\t\t\tthis.props.updateDevice(this.props.device);\t// TODO: add a message to conninfo for some human readable debug\n\t\t\t})).catch((err) => {\n\t\t\t\tconsole.log(\"errhere\");\n\t\t\t\tconsole.log(err);\n\t\t\t\tthis.props.device.connInfo.connected = false;\n\t\t\t\tthis.props.updateDevice(this.props.device);\t// TODO: add a message to conninfo for some human readable debug\n\t\t\t}).finally(() => {\n\t\t\t\tconsole.log(\"flaadshededefe\");\n\t\t\t\tthis._flashref.current.flash();\n\t\t\t\tthis.props.flashmaster();\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tlet promisemaker = (url) => {\n\t\t\t\treturn timeout(5000, fetch(url + \"forward\", makePostOptions({\n\t\t\t\t\tboardname: this.props.device.boardname,\n\t\t\t\t\tpostjson: \"null\",\n\t\t\t\t\tpost: \"0\",\n\t\t\t\t\turl: \"/settings\"\n\t\t\t\t}))).then(response => response.text()).then((response) => {\n\t\t\t\t\tconsole.log(JSON.parse(getForwardData(response).response));\n\t\t\t\t\treturn getForwardData(response).response;\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\treturn false\n\t\t\t\t});\n\t\t\t}\n\t\t\tPromise.all([promisemaker(this.props.master.lastip), promisemaker(ip5), promisemaker(ip6)]).then((values) => {\n\t\t\t\tlet settingsmatches = (response) => {\n\t\t\t\t\treturn isSettings(response) && JSON.parse(response).boardname == this.props.device.boardname;\n\t\t\t\t}\n\t\t\t\tconsole.log(\"inhereeeeeeee\");\n\t\t\t\tconsole.log(values);\n\t\t\t\tthis.props.device.connInfo.connected = settingsmatches(values[0]) || settingsmatches(values[1]) || settingsmatches(values[2]);\n\t\t\t\tif (this.props.device.connInfo.connected) {\n\t\t\t\t\tlet mtched = -1;\n\t\t\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\t\t\tif (settingsmatches(values[i])) {\n\t\t\t\t\t\t\tmtched = i;\n\t\t\t\t\t\t\tthis.props.device.settings = JSON.parse(values[i]);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.props.updateDevice(this.props.device);\n\t\t\t\tthis._flashref.current.flash();\n\t\t\t\tthis.props.flashmaster();\n\t\t\t})\n\t\t}\n\t}\n\n\tupdateSensorData() { // TODO: dry\n\t\tlet index = this.props.index;\n\t\tlet processfunc = (response) => {\n\t\t\tconsole.log(response);\n\t\t\tlet sensorarr = response.split(\"\\n\");\n\t\t\tthis.props.device.readings.temperature = Math.round((parseFloat(sensorarr[0]) - 2500) / 10) / 10;\n\t\t\tthis.props.device.readings.moisture = Math.min(100, Math.max(0, Math.round(100 * (parseFloat(sensorarr[1]) / 4095))));\n\t\t\tthis.props.device.readings.sunlight = Math.min(100, Math.max(0, Math.round(100 * (parseFloat(sensorarr[2]) / 4095))));\n\t\t\tconsole.log(this.props.device.readings);\n\n\t\t\tthis.props.device.watering.watering = (sensorarr[4] == \"watering\");\n\t\t\tthis.props.device.watering.reason = sensorarr[5];\n\t\t\tthis.props.device.watering.cooldownleft = parseFloat(sensorarr[6]);\n\t\t\tconsole.log(this.props.device.readings);\n\t\t\tthis.datasync.current.flash();\n\t\t\tthis.props.updateDevice(this.props.device);\n\t\t}\n\n\t\tif (index == 0) {\n\t\t\ttimeout(3000, fetch(this.props.master.lastip + \"sensordata\", getOptions)).then(response => response.text()).then((response) => {\n\t\t\t\tprocessfunc(response);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\ttimeout(3000, fetch(this.props.master.lastip + \"forward\", makePostOptions({\n\t\t\t\tboardname: this.props.device.boardname,\n\t\t\t\tpostjson: \"null\",\n\t\t\t\tpost: \"0\",\n\t\t\t\turl: \"/sensordata\"\n\t\t\t}))).then(response => response.text()).then(response => { console.log(response); return getForwardData(response).response; }).then((response) => {\n\t\t\t\tprocessfunc(response)\n\t\t\t});\n\t\t}\n\t}\n\n\tchangelightingmode(e) {\n\t\tthis.state.settingsCPS.lightingtype = parseInt(e.target.value);\n\t\tthis.setState({ settingsCPS: this.state.settingsCPS });\n\t}\n\n\tstartWatering() {\n\t\tthis.wateringposts.current.begin();\n\t\tlet moisturepostjson = {\n\t\t\tforce: \"1\",\n\t\t\tfor: \"6\"\n\t\t}\n\t\tlet fetchmasterconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"userwater\", makePostOptions(moisturepostjson)).then(response => response.text())\n\t\t}\n\t\tlet fetchslaveconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"forward\", makePostOptions({\n\t\t\t\tboardname: this.props.device.boardname,\n\t\t\t\tpostjson: new URLSearchParams(moisturepostjson).toString(),\n\t\t\t\tpost: \"1\",\n\t\t\t\turl: \"/userwater\"\n\t\t\t})).then(response => response.text()).then(response => {\n\t\t\t\treturn getForwardData(response).response;\n\t\t\t})\n\t\t}\n\t\tlet fetchfunc;\n\t\tif (this.props.index == 0) fetchfunc = fetchmasterconst();\n\t\telse fetchfunc = fetchslaveconst();\n\t\ttimeout(5000, fetchfunc).then((rsp) => {\n\t\t\tconsole.log(rsp);\n\t\t\tif (rsp == \"OK\") {\n\t\t\t\tthis.wateringposts.current.succeed();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.wateringposts.current.fail();\n\t\t\t}\n\t\t})\n\t}\n\n\tstopWatering() {\n\t\tthis.wateringposts.current.begin();\n\t\tlet moisturepostjson = {}\n\t\tlet fetchmasterconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"userstopwater\", makePostOptions(moisturepostjson)).then(response => response.text())\n\t\t}\n\t\tlet fetchslaveconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"forward\", makePostOptions({\n\t\t\t\tboardname: this.props.device.boardname,\n\t\t\t\tpostjson: new URLSearchParams(moisturepostjson).toString(),\n\t\t\t\tpost: \"1\",\n\t\t\t\turl: \"/userstopwater\"\n\t\t\t})).then(response => response.text()).then(response => {\n\t\t\t\treturn getForwardData(response).response;\n\t\t\t})\n\t\t}\n\t\tlet fetchfunc;\n\t\tif (this.props.index == 0) fetchfunc = fetchmasterconst();\n\t\telse fetchfunc = fetchslaveconst();\n\t\ttimeout(5000, fetchfunc).then((rsp) => {\n\t\t\tif (rsp == \"OK\") {\n\t\t\t\tthis.wateringposts.current.succeed();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.wateringposts.current.fail();\n\t\t\t}\n\t\t})\n\t}\n\n\tsaveMoistureSettings() {\n\t\tthis.moistureposts.current.begin();\n\t\tlet moisturepostjson = {\n\t\t\tmoistureBegin: this.state.settingsCPS.moistureBegin,\n\t\t\tmoistureEnd: this.state.settingsCPS.moistureEnd\n\t\t}\n\t\tlet fetchmasterconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"moisturesettings\", makePostOptions(moisturepostjson)).then(response => response.text())\n\t\t}\n\t\tlet fetchslaveconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"forward\", makePostOptions({\n\t\t\t\tboardname: this.props.device.boardname,\n\t\t\t\tpostjson: new URLSearchParams(moisturepostjson).toString(),\n\t\t\t\tpost: \"1\",\n\t\t\t\turl: \"/moisturesettings\"\n\t\t\t})).then(response => response.text()).then(response => {\n\t\t\t\treturn getForwardData(response).response;\n\t\t\t})\n\t\t}\n\t\tlet fetchfunc;\n\t\tif (this.props.index == 0) fetchfunc = fetchmasterconst();\n\t\telse fetchfunc = fetchslaveconst();\n\t\ttimeout(5000, fetchfunc).then((rsp) => {\n\t\t\tif (rsp == \"OK\") {\n\t\t\t\tthis.moistureposts.current.succeed();\n\t\t\t\t// save it\n\t\t\t\tthis.props.device.settings.moistureBegin = moisturepostjson.moistureBegin;\n\t\t\t\tthis.props.device.settings.moistureEnd = moisturepostjson.moistureEnd;\n\t\t\t\tthis.props.updateDevice(this.props.device);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.moistureposts.current.fail();\n\t\t\t}\n\t\t})\n\t}\n\n\tsaveAdvancedSettings() {\n\t\tthis.advancedposts.current.begin();\n\t\tlet moisturepostjson = {\n\t\t\tcheckingTime: this.state.settingsCPS.checkingTime,\n\t\t\tcooldown: this.state.settingsCPS.cooldown\n\t\t}\n\t\tlet fetchmasterconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"advancedsettings\", makePostOptions(moisturepostjson)).then(response => response.text())\n\t\t}\n\t\tlet fetchslaveconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"forward\", makePostOptions({\n\t\t\t\tboardname: this.props.device.boardname,\n\t\t\t\tpostjson: new URLSearchParams(moisturepostjson).toString(),\n\t\t\t\tpost: \"1\",\n\t\t\t\turl: \"/advancedsettings\"\n\t\t\t})).then(response => response.text()).then(response => {\n\t\t\t\treturn getForwardData(response).response;\n\t\t\t})\n\t\t}\n\t\tlet fetchfunc;\n\t\tif (this.props.index == 0) fetchfunc = fetchmasterconst();\n\t\telse fetchfunc = fetchslaveconst();\n\t\ttimeout(5000, fetchfunc).then((rsp) => {\n\t\t\tif (rsp == \"OK\") {\n\t\t\t\tthis.advancedposts.current.succeed();\n\t\t\t\t// save it\n\t\t\t\tthis.props.device.settings.checkingTime = moisturepostjson.checkingTime;\n\t\t\t\tthis.props.device.settings.cooldown = moisturepostjson.cooldown;\n\t\t\t\tthis.props.updateDevice(this.props.device);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.advancedposts.current.fail();\n\t\t\t}\n\t\t})\n\t}\n\n\tsaveLightingSettings() {\n\t\tthis.lightingposts.current.begin();\n\t\tlet loval = this.state.settingsCPS.moistureBegin;\n\t\tlet hival = this.state.settingsCPS.moistureEnd;\n\t\tlet ltype = \"b\";\n\t\tswitch (this.state.settingsCPS.lightingtype) {\n\t\t\tcase 97: // \"dark\"\n\t\t\t\tloval = 100;\n\t\t\t\thival = 4000;\n\t\t\t\tltype = \"a\";\n\t\t\t\tbreak;\n\t\t\tcase 99: // \"cold\"\n\t\t\t\tloval = 100;\n\t\t\t\thival = 4000;\n\t\t\t\tltype = \"c\";\n\t\t\t\tbreak;\n\t\t}\n\t\tlet lightingpostjson = {\n\t\t\tlightingtype: ltype,\n\t\t\tlowvalue: loval,\n\t\t\thighvalue: hival,\n\t\t\tlowlightingr: this.state.settingsCPS.lowlighting.r,\n\t\t\tlowlightingg: this.state.settingsCPS.lowlighting.g,\n\t\t\tlowlightingb: this.state.settingsCPS.lowlighting.b,\n\t\t\thighlightingr: this.state.settingsCPS.highlighting.r,\n\t\t\thighlightingg: this.state.settingsCPS.highlighting.g,\n\t\t\thighlightingb: this.state.settingsCPS.highlighting.b\n\t\t}\n\t\tlet fetchmasterconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"lightsettings\", makePostOptions(lightingpostjson)).then(response => response.text())\n\t\t}\n\t\tlet fetchslaveconst = () => {\n\t\t\treturn fetch(this.props.master.lastip + \"forward\", makePostOptions({\n\t\t\t\tboardname: this.props.device.boardname,\n\t\t\t\tpostjson: new URLSearchParams(lightingpostjson).toString(),\n\t\t\t\tpost: \"1\",\n\t\t\t\turl: \"/lightsettings\"\n\t\t\t})).then(response => response.text()).then(response => {\n\t\t\t\treturn getForwardData(response).response;\n\t\t\t})\n\t\t}\n\t\tlet fetchfunc;\n\t\tif (this.props.index == 0) fetchfunc = fetchmasterconst();\n\t\telse fetchfunc = fetchslaveconst();\n\t\ttimeout(5000, fetchfunc).then((rsp) => {\n\t\t\tif (rsp == \"OK\") {\n\t\t\t\tthis.lightingposts.current.succeed();\n\t\t\t\t// save it\n\t\t\t\tthis.props.device.settings.lowlighting = JSON.parse(JSON.stringify(this.state.settingsCPS.lowlighting));\n\t\t\t\tthis.props.device.settings.highlighting = JSON.parse(JSON.stringify(this.state.settingsCPS.highlighting));\n\t\t\t\tthis.props.device.settings.lowvalue = loval;\n\t\t\t\tthis.props.device.settings.highvalue = hival;\n\t\t\t\tthis.props.updateDevice(this.props.device);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.lightingposts.current.fail();\n\t\t\t}\n\t\t})\n\t}\n\n\tasync delete() {\n\t\tconsole.log(\"exect\");\n\t\t// get devices from the master, find our device, if our device is in there delete it, if deletion succeeds then remove from table and update gardens\n\t\tthis.setState({\n\t\t\tfinished: false,\n\t\t\terror: \"\"\n\t\t})\n\t\tthis.deletionpost.current.begin();\n\t\tconsole.log(\"eibe\");\n\t\ttry {\n\t\t\tconsole.log(\"topfrag\")\n\t\t\tlet devices = await timeout(4000, fetch(this.props.master.lastip + \"devices\", getOptions)).then(response => response.text());\n\t\t\tconsole.log(devices);\n\t\t\tconsole.log(\"eibeennenen\");\n\t\t\tlet deviceslist = devices.split(\"\\n\");\n\t\t\tdeviceslist.pop();\n\t\t\tconsole.log(deviceslist);\n\t\t\tfor (let i = 0; i < deviceslist.length; i++) {\n\t\t\t\tlet entry = deviceslist[i];\n\t\t\t\tlet entdata = entry.split(\" \");\n\n\t\t\t\tconsole.log(entry)\n\n\t\t\t\tif (entdata[0].slice(0, -1) == this.props.device.mac) {\n\t\t\t\t\t// we gotta delete\n\t\t\t\t\tconsole.log(\"erioeobg\")\n\t\t\t\t\tlet removal = await timeout(4000, fetch(this.props.master.lastip + \"removedevice\", makePostOptions({\n\t\t\t\t\t\tboardidx: i\n\t\t\t\t\t}))).then(response => response.text());\n\t\t\t\t\tconsole.log(removal);\n\t\t\t\t\tif (removal != \"OK\") {\n\t\t\t\t\t\tthrow Error(\"removal failed\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// finally remove from devicelists\n\t\t\tlet newgardens = JSON.parse(JSON.stringify(this.context.gardens));\n\t\t\tconsole.log(this.props.idx);\n\t\t\tconsole.log(JSON.stringify(newgardens[this.props.idx].devices));\n\t\t\tnewgardens[this.props.idx].devices.splice(this.props.index - 1, 1);\n\t\t\tconsole.log(this.props.index - 1);\n\t\t\tconsole.log(JSON.stringify(newgardens[this.props.idx].devices))\n\t\t\tconsole.log(JSON.stringify(newgardens))\n\t\t\tconsole.log(\"going darl\");\n\t\t\tthis.props.updateGardens(newgardens);\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log(e);\n\t\t\tthis.deletionpost.current.fail();\n\t\t}\n\t}\n\n\trender() {\n\t\tlet value = this.props.device;\n\t\treturn (<div key=\"index\" className={\"ag-collapse \" + (this.props.visible ? \"\" : \"ag-collapsed\")}>\n\t\t\t<Popup ref={this.popup} shown={() => {\n\t\t\t\tthis.updateSensorData();\n\t\t\t\tthis.sensorinterval = setInterval(() => {\n\t\t\t\t\tconsole.log(\"heifhef\");\n\t\t\t\t\tthis.updateSensorData();\n\t\t\t\t}, 6000);\n\t\t\t}} hidden={() => { clearInterval(this.datainterval) }}>\n\t\t\t\t<h5>\n\t\t\t\t\t<Editable value={value.humanname} update={(val) => {\n\t\t\t\t\t\tthis.props.device.humanname = val;\n\t\t\t\t\t\tthis.props.updateDevice(this.props.device);\n\t\t\t\t\t}}></Editable> <Flash icon=\"sync\" ref={this.datasync}></Flash>\n\t\t\t\t</h5>\n\t\t\t\t<div className=\"row m-0 no-gutters\">\n\t\t\t\t\t<div className=\"col-4 text-center\">\n\t\t\t\t\t\t<b>Moisture</b>\n\t\t\t\t\t\t<p className=\"m-0 p-2\">\n\t\t\t\t\t\t\t<i className=\"material-icons sensoricon font-size-large water-icon\" style={{ color: \"hsl(200, 100%, \" + (value.readings.moisture / 2) + \"%)\" }}>location_on</i>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>{value.readings.moisture}%</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 text-center\">\n\t\t\t\t\t\t<b>Sunlight</b>\n\t\t\t\t\t\t<p className=\"m-0 p-2\">\n\t\t\t\t\t\t\t<i className=\"material-icons sensoricon font-size-large\" style={{ color: \"hsl(55, 100%, \" + (value.readings.sunlight / 2) + \"%)\" }}>brightness_{Math.round(value.readings.sunlight / 16.67) + 1}</i>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>{value.readings.sunlight}%</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4 text-center\">\n\t\t\t\t\t\t<b>Temperature</b>\n\t\t\t\t\t\t<p className=\"m-0 p-2\">\n\t\t\t\t\t\t\t<i className=\"material-icons sensoricon font-size-large\" style={{ color: \"hsl(35, 100%, \" + Math.min(100, Math.max(0, ((value.readings.temperature + 5) * 1.42857143))) + \"%)\" }}>wb_sunny</i>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>{value.readings.temperature}°C</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t<p className={value.watering.watering ? \"text-info\" : \"\"}>{value.watering.watering ? \"Watering\" : \"Not watering\"}<br /><button className=\"btn btn-primary\" onClick={() => {\n\t\t\t\t\tthis.startWatering();\n\t\t\t\t}}>\n\t\t\t\t\tBegin watering for 6s\n\t\t\t\t\t\t\t\t\t</button><br /> <button className=\"btn btn-dark\" onClick={() => {\n\t\t\t\t\t\tthis.stopWatering();\n\t\t\t\t\t}}>\n\t\t\t\t\t\tStop watering\n\t\t\t\t\t\t\t\t</button> <Post ref={this.wateringposts}></Post></p>\n\t\t\t\t{value.watering.cooldownleft > 0 ? <p>{\"Watered recently, won't water automatically for \" + millisecondsToStr(value.watering.cooldownleft / 1000)}</p> : null}\n\t\t\t\t<br />\n\t\t\t\t<h6>Watering settings</h6>\n\t\t\t\t<p>Drag the slider to choose a moisture level to maintain for your plants.\t</p>\n\t\t\t\t<p>Automatically water? <input checked={wateringOn(this.state.settingsCPS)} className=\"d-inline-block\" type=\"checkbox\" onChange={\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\tthis.state.settingsCPS.moistureBegin = 2000 - spread;\n\t\t\t\t\t\t\tthis.state.settingsCPS.moistureEnd = 2000 + spread;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.state.settingsCPS.moistureBegin = 5000;\n\t\t\t\t\t\t\tthis.state.settingsCPS.moistureEnd = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({ settingsCPS: this.state.settingsCPS })\n\t\t\t\t\t}\n\t\t\t\t} /></p>\n\t\t\t\t<div className={wateringOn(this.state.settingsCPS) ? \"\" : \"div-disabled\"}>\n\t\t\t\t\t<input class=\"wateringslider\" type=\"range\" min=\"0\" max=\"4095\" value={getMoistureSetting(this.state.settingsCPS)} onChange={(e) => {\n\t\t\t\t\t\tthis.state.settingsCPS.moistureBegin = Math.max(0, parseInt(e.target.value) - spread);\n\t\t\t\t\t\tthis.state.settingsCPS.moistureEnd = Math.min(4096, parseInt(e.target.value) + spread);\n\t\t\t\t\t\t// console.log(Math.min(4096, e.target.value + spread));\n\t\t\t\t\t\t// console.log(e.target.value + spread);\n\t\t\t\t\t\t// console.log(spread);\n\t\t\t\t\t\t// console.log(e.target.value);\n\t\t\t\t\t\t// console.log(e.target.value - spread);\n\t\t\t\t\t\t// console.log(this.state.settingsCPS);\n\t\t\t\t\t\tthis.setState({ settingsCPS: this.state.settingsCPS });\n\t\t\t\t\t}} />\n\t\t\t\t\t<p></p>\n\t\t\t\t\t<p><span>100% - fully wet</span><span className=\"float-right\">fully dry - 0%</span></p>\n\t\t\t\t\t<p>Current setting: {Math.round(getMoistureSetting(this.state.settingsCPS) / 40.96)}</p>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={() => { this.saveMoistureSettings() }} className={\"btn btn-primary \" + (value.connInfo.connected ? \"\" : \"disabled\")}>Save watering settings</button> <Post ref={this.moistureposts}></Post>\n\t\t\t\t<p></p>\n\t\t\t\t<h6>Lighting settings</h6>\n\t\t\t\t{/* we'll just show hue sliders here, and one setting for lights on */}\n\t\t\t\t<p>Control the colour of the lights on the device based on current sensor readings.</p>\n\t\t\t\t<p>Turn lights on? <input checked={lightsOn(this.state.settingsCPS)} className=\"d-inline-block\" type=\"checkbox\" onChange={\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\tthis.state.settingsCPS.lowlighting = {\n\t\t\t\t\t\t\t\tr: 255,\n\t\t\t\t\t\t\t\tg: 0,\n\t\t\t\t\t\t\t\tb: 0\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.state.settingsCPS.highlighting = {\n\t\t\t\t\t\t\t\tr: 255,\n\t\t\t\t\t\t\t\tg: 0,\n\t\t\t\t\t\t\t\tb: 0\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.state.settingsCPS.lowlighting = {\n\t\t\t\t\t\t\t\tr: 0,\n\t\t\t\t\t\t\t\tg: 0,\n\t\t\t\t\t\t\t\tb: 0\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.state.settingsCPS.highlighting = {\n\t\t\t\t\t\t\t\tr: 0,\n\t\t\t\t\t\t\t\tg: 0,\n\t\t\t\t\t\t\t\tb: 0\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({ settingsCPS: this.state.settingsCPS })\n\t\t\t\t\t}\n\t\t\t\t} /></p>\n\t\t\t\t<div className={lightsOn(this.state.settingsCPS) ? \"\" : \"div-disabled\"}>\n\t\t\t\t\t<p>Change lighting based on: </p>\n\t\t\t\t\t<input className=\"m-1\" type=\"radio\" name={value.boardname} value={98} onChange={(e) => { this.changelightingmode(e) }} checked={this.state.settingsCPS.lightingtype == 98} />\n\t\t\t\t\t<label>Moisture</label> <br />\n\t\t\t\t\t<input className=\"m-1\" type=\"radio\" name={value.boardname} value={97} onChange={(e) => { this.changelightingmode(e) }} checked={this.state.settingsCPS.lightingtype == 97} />\n\t\t\t\t\t<label>Sunlight</label> <br />\n\t\t\t\t\t<input className=\"m-1\" type=\"radio\" name={value.boardname} value={99} onChange={(e) => { this.changelightingmode(e) }} checked={this.state.settingsCPS.lightingtype == 99} />\n\t\t\t\t\t<label>Temperature</label> <br />\n\t\t\t\t\t<p>Color when {(() => {\n\t\t\t\t\t\tswitch (this.state.settingsCPS.lightingtype) {\n\t\t\t\t\t\t\tcase 98:\n\t\t\t\t\t\t\t\treturn \"dry\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 97:\n\t\t\t\t\t\t\t\treturn \"dark\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn \"cold\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t})()}</p>\n\t\t\t\t\t<input className=\"hueslider\" type=\"range\" min=\"0\" max=\"255\" value={rgbtohsv(this.state.settingsCPS.lowlighting).r} onChange={(e) => {\n\t\t\t\t\t\tthis.state.settingsCPS.lowlighting = hsvtorgb({\n\t\t\t\t\t\t\tr: parseInt(e.target.value),\n\t\t\t\t\t\t\tg: 255,\n\t\t\t\t\t\t\tb: 255\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setState({ settingsCPS: this.state.settingsCPS });\n\t\t\t\t\t}} />\n\t\t\t\t\t<br />\n\t\t\t\t\t<p>Color when {(() => {\n\t\t\t\t\t\tswitch (this.state.settingsCPS.lightingtype) {\n\t\t\t\t\t\t\tcase 98:\n\t\t\t\t\t\t\t\treturn \"wet\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 97:\n\t\t\t\t\t\t\t\treturn \"sunny\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn \"hot\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t})()}</p>\n\t\t\t\t\t<input className=\"hueslider\" type=\"range\" min=\"0\" max=\"255\" value={rgbtohsv(this.state.settingsCPS.highlighting).r} onChange={(e) => {\n\t\t\t\t\t\tthis.state.settingsCPS.highlighting = hsvtorgb({\n\t\t\t\t\t\t\tr: parseInt(e.target.value),\n\t\t\t\t\t\t\tg: 255,\n\t\t\t\t\t\t\tb: 255\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setState({ settingsCPS: this.state.settingsCPS });\n\t\t\t\t\t}} />\n\t\t\t\t\t<br />\n\t\t\t\t</div>\n\t\t\t\t<p></p>\n\t\t\t\t<button onClick={() => { this.saveLightingSettings() }} className={\"btn btn-primary \" + (value.connInfo.connected ? \"\" : \"disabled\")}>Save lighting settings</button> <Post ref={this.lightingposts}></Post>\n\t\t\t\t<p></p> {/* TODO: advanced settings */}\n\t\t\t\t<h6>Advanced settings</h6>\n\t\t\t\t<p>How long (in minutes) should the device wait for a stable reading before beginning to water? <input type=\"number\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.state.settingsCPS.checkingTime = e.target.value;\n\t\t\t\t\t\tthis.setState({ settingsCPS: this.state.settingsCPS })\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={this.state.settingsCPS.checkingTime} />\n\t\t\t\t</p>\n\t\t\t\t<p>How long (in minutes) should the device wait in between consecutive waterings? <input type=\"number\"\n\t\t\t\t\tonChange={(e) => { this.state.settingsCPS.cooldown = e.target.value; this.setState({ settingsCPS: this.state.settingsCPS }) }} value={this.state.settingsCPS.cooldown} />\n\t\t\t\t</p>\n\t\t\t\t<p></p>\n\t\t\t\t<button onClick={() => { this.saveAdvancedSettings() }} className={\"btn btn-primary \" + (value.connInfo.connected ? \"\" : \"disabled\")}>Save advanced settings</button> <Post ref={this.advancedposts}></Post>\n\t\t\t\t<p></p>\n\t\t\t\t<p></p>\n\t\t\t\t{this.props.index == 0 ? null : (<div>\n\t\t\t\t\t<h6>Delete this device</h6>\n\t\t\t\t\t<p><button className=\"btn btn-danger\" onClick={() => { this.delete() }}>Delete this device</button> <Post ref={this.deletionpost}></Post></p>\n\t\t\t\t</div>)}\n\t\t\t</Popup>\n\n\t\t\t<div className={\"row m-0 p-3 align-items-center\"} onClick={() => { this.popup.current.showPopup() }}>\n\t\t\t\t<div className=\"col-1\"></div>\n\t\t\t\t<div className=\"col-auto\">\n\t\t\t\t\t<i className={\"material-icons font-size-large \" + (value.connInfo.connected ? \"text-success\" : \"text-danger\")}>local_florist</i>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-auto\">\n\t\t\t\t\t<span><b>{value.humanname}</b></span>\n\t\t\t\t\t<br />\n\t\t\t\t\t<span><small className=\"text-muted\">({value.boardname}) {(value.master ? (<span className=\"text-primary\">(main)</span>) : \"\")}</small></span>\n\t\t\t\t\t<p><span className={this.props.device.connInfo.connected ? \"text-success\" : \"text-danger\"}>{(this.props.device.connInfo.connected ? \"Connected\" : \"Not found\") + \" \"}</span>\n\t\t\t\t\t\t<Flash ref={this._flashref} icon=\"sync\"></Flash>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div >)\n\t}\n}\n\nclass Garden extends React.Component {\n\tstatic contextType = globalStateContext;\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvisible: false,\n\t\t\taddNewDeviceStage: \"connslave\",\n\t\t\tboardname: null,\n\t\t\tmac: null,\n\t\t\tsettings: {},\n\t\t\terror: \"\",\n\t\t\tboardip: \"\",\n\t\t\tfinished: false,\n\t\t\tmasterpassword: \"\",\n\t\t\tsearchfounds: 0,\n\t\t\tsearchnum: 0\n\t\t}\n\n\t\tthis.setupconnslave = this.setupconnslave.bind(this);\n\t\tthis.setuprstslave = this.setuprstslave.bind(this);\n\t\tthis.setupaddtomaster = this.setupaddtomaster.bind(this);\n\n\t\tthis.search = this.search.bind(this);\n\t\tthis._editGardenPopup = React.createRef();\n\t\tthis._masterflashref = React.createRef();\n\t\tthis._connslavepost = React.createRef();\n\t\tthis._rstslavepost = React.createRef();\n\t\tthis._addtomasterpost = React.createRef();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.gardeninterval);\n\t}\n\n\tasync search() {\n\t\tthis.setState({ searchingfound: false, searching: true, searchfounds: 0, searchnum: await ipSpace() }, () => {\n\t\t\tsearchIPS((httpip) => {\n\t\t\t\tconsole.log(httpip);\n\t\t\t\tfetch(httpip, getOptions)\n\t\t\t\t\t.then(response => response.text())\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// verify the response\n\t\t\t\t\t\tconsole.log(this.props.garden.master.boardname);\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\tif (this.props.garden.master.boardname == response) {\n\t\t\t\t\t\t\tlet newgardens = this.context.gardens;\n\t\t\t\t\t\t\tconsole.log(httpip);\n\t\t\t\t\t\t\tnewgardens[this.props.idx].master.lastip = httpip;\n\t\t\t\t\t\t\tconsole.log(\"FOUND\");\n\t\t\t\t\t\t\tconsole.log(newgardens);\n\t\t\t\t\t\t\tthis.props.updateGardens(newgardens);\n\t\t\t\t\t\t\tthis.setState({ searchingfound: true });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.log(err))\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tthis.setState((prevState, props) => ({\n\t\t\t\t\t\t\tsearchfounds: prevState.searchfounds + 1\n\t\t\t\t\t\t}));\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync setupconnslave() {\n\t\tthis._connslavepost.current.begin();\n\t\tlet p1 = timeout(4000, fetch(ip5 + \"settings\", getOptions).then(response => response.text())).catch(reason => { console.log(\"5nocon\"); return \"NOCONN\" });\n\t\tlet p2 = timeout(4000, fetch(ip6 + \"settings\", getOptions).then(response => response.text())).catch(reason => { console.log(\"6nocon\"); return \"NOCONN\" });\n\t\tPromise.all([p1, p2]).then((values) => {\n\t\t\tconsole.log(this.context.gardens)\n\t\t\tconsole.log(values);\n\t\t\tlet localip;\n\t\t\tlet success = false;\n\t\t\tif (isSettings(values[0])) {\n\t\t\t\tthis.setState({ boardname: JSON.parse(values[0]).boardname, settings: JSON.parse(values[0]) });\n\t\t\t\tlocalip = ip5;\n\t\t\t\tsuccess = true;\n\t\t\t}\n\t\t\telse if (isSettings(values[1])) {\n\t\t\t\tthis.setState({ boardname: JSON.parse(values[1]).boardname, settings: JSON.parse(values[1]) });\n\t\t\t\tlocalip = ip6;\n\t\t\t\tsuccess = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._connslavepost.current.fail();\n\t\t\t}\n\n\t\t\tif (success) {\n\t\t\t\tfetch(localip + \"mac\", getOptions).then(response => response.text()).then(async (macresponse) => {\n\t\t\t\t\t// TODO: what if this isn't a mac\n\t\t\t\t\tconsole.log(this.state);\n\t\t\t\t\tconsole.log(this.state.masterpassword);\n\t\t\t\t\tlet setwifires = await timeout(4000, fetch(localip + \"setwifi\", makePostOptions({\n\t\t\t\t\t\tssid: this.props.garden.master.boardname,\n\t\t\t\t\t\tpassword: this.state.masterpassword\n\t\t\t\t\t}))).then(response => response.text());\n\t\t\t\t\tconsole.log({\n\t\t\t\t\t\tssid: this.props.garden.master.boardname,\n\t\t\t\t\t\tpassword: this.state.masterpassword\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(setwifires);\n\t\t\t\t\tif (setwifires != \"OK\") throw Error(\"no ok\");\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tfetch(localip + \"connected\", getOptions).then(response => response.text()).then((response) => {\n\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t\tif (response == \"YES\") {\n\t\t\t\t\t\t\t\tthis._connslavepost.current.reset();\n\t\t\t\t\t\t\t\tthis.setState({ mac: macresponse, addNewDeviceStage: \"rstslave\", boardip: localip });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis._connslavepost.current.fail();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}, 4000)\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tthis._connslavepost.current.fail();\n\t\t\t\t})\n\t\t\t}\n\t\t\tconsole.log(this.context.gardens)\n\t\t}).catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\tthis._connslavepost.current.fail();\n\t\t});\n\t}\n\n\tsetuprstslave() {\n\t\tthis._rstslavepost.current.begin();\n\t\ttimeout(5000, fetch(this.state.boardip + \"setstate\", makePostOptions({\n\t\t\tisSlave: \"1\"\n\t\t}))).finally(() => {\n\t\t\tthis._rstslavepost.current.reset();\n\t\t\tthis.setState({\n\t\t\t\taddNewDeviceStage: \"addtomaster\"\n\t\t\t})\n\t\t});\n\t}\n\n\tasync setupaddtomaster() {\n\t\tthis.setState({\n\t\t\tfinished: false,\n\t\t\terror: \"\"\n\t\t})\n\t\tthis._addtomasterpost.current.begin();\n\n\t\ttry {\n\t\t\tconsole.log(this.context.gardens)\n\t\t\tlet needtoadd = true;\n\t\t\tlet devices = await timeout(15000, fetch(this.context.gardens[this.props.idx].master.lastip + \"devices\", getOptions)).then(response => response.text());\n\t\t\tlet deviceslist = devices.split(\"\\n\");\n\t\t\tdeviceslist.pop();\n\t\t\tconsole.log(deviceslist);\n\t\t\tfor (let i = 0; i < deviceslist.length; i++) {\n\t\t\t\tlet entry = deviceslist[i];\n\t\t\t\tlet entdata = entry.split(\" \");\n\t\t\t\t// 1 - is it already here?\n\t\t\t\tif (entdata[0].slice(0, -1) == this.state.mac) {\n\t\t\t\t\tif (entdata[1] == this.state.boardname) {\n\t\t\t\t\t\t// it's here\n\t\t\t\t\t\t// succeed\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tfinished: true,\n\t\t\t\t\t\t\terror: \"Device already added!\"\n\t\t\t\t\t\t})\n\t\t\t\t\t\tneedtoadd = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// it's here but incorrect boardname\n\t\t\t\t\t\t// remove and add it\n\t\t\t\t\t\tlet removal = await timeout(15000, fetch(this.context.gardens[this.props.idx].master.lastip + \"removedevice\", makePostOptions({\n\t\t\t\t\t\t\tboardidx: i\n\t\t\t\t\t\t}))).then(response => response.text());\n\t\t\t\t\t\tconsole.log(removal);\n\t\t\t\t\t\tif (removal != \"OK\") {\n\t\t\t\t\t\t\tthrow Error(\"removal failed\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// finally, check if we have space\n\t\t\tif (deviceslist.length > 4) { // TODO: put this in a settings var or smth\n\t\t\t\tthis.setState({\n\t\t\t\t\tfinished: false,\n\t\t\t\t\terror: \"Only 4 devices can be connected to this valve.\"\n\t\t\t\t})\n\t\t\t\tthrow Error(\"too many devices\");\n\t\t\t}\n\n\t\t\tif (needtoadd) {\n\t\t\t\tlet addition = await timeout(15000, fetch(this.context.gardens[this.props.idx].master.lastip + \"adddevice\", makePostOptions({\n\t\t\t\t\tboardname: this.state.boardname,\n\t\t\t\t\tmacaddress: this.state.mac\n\t\t\t\t}))).then(response => response.text())\n\t\t\t\tconsole.log(addition);\n\t\t\t\tif (addition != \"OK\") {\n\t\t\t\t\tthrow Error(\"addition failed\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// FINALLY add it to my tables - if we have something with the same mac or same boardname, go overwrite it\n\t\t\tlet found = false;\n\t\t\tconsole.log(this.context.gardens)\n\t\t\tlet devicesCP = JSON.parse(JSON.stringify(this.context.gardens[this.props.idx].devices));\n\t\t\tlet devicejson = {\n\t\t\t\tmaster: false,\n\t\t\t\thumanname: this.state.boardname,\n\t\t\t\tboardname: this.state.boardname,\n\t\t\t\tlastip: null,\n\t\t\t\tmac: this.state.mac,\n\t\t\t\tconnInfo: {\n\t\t\t\t\tconnected: false\n\t\t\t\t},\n\t\t\t\tsettings: this.state.settings,\n\t\t\t\treadings: {\n\t\t\t\t\tmoisture: 0,\n\t\t\t\t\ttemperature: 0,\n\t\t\t\t\tsunlight: 0\n\t\t\t\t},\n\t\t\t\twatering: {\n\t\t\t\t\t\"watering\": false,\n\t\t\t\t\t\"reason\": '_',\n\t\t\t\t\t\"cooldownleft\": -1\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = 0; i < devicesCP.length; i++) {\n\t\t\t\tif (devicesCP[i].mac == this.state.mac) {\n\t\t\t\t\tdevicesCP[i] = JSON.parse(JSON.stringify(devicejson));\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!found) {\n\t\t\t\tdevicesCP.push(JSON.parse(JSON.stringify(devicejson)));\n\t\t\t\tconsole.log(\"hiuwb\");\n\t\t\t}\n\t\t\tthis.context.gardens[this.props.idx].devices = devicesCP;\n\t\t\tconsole.log(this.context.gardens)\n\t\t\tthis.props.updateGardens(this.context.gardens);\n\t\t\tthis.setState({\n\t\t\t\tfinished: true\n\t\t\t})\n\t\t\tthis._addtomasterpost.current.succeed();\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log(e);\n\t\t\tthis._addtomasterpost.current.fail();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"garden-row\" >\n\t\t\t\t<div className=\"row m-0 align-items-center p-3\">\n\t\t\t\t\t<div className=\"col-auto\" onClick={() => { this.updateConnInfo(); this._editGardenPopup.current.showPopup(); }}>\n\t\t\t\t\t\t<i className={\"material-icons font-size-large \" + (masterConnected(this.props.garden) ? \"text-success\" : \"text-danger\")}>grass</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-auto mr-auto\" onClick={() => { this._editGardenPopup.current.showPopup() }}>\n\t\t\t\t\t\t<h6>{this.props.garden.name} <i className=\"material-icons\">edit</i></h6>\n\t\t\t\t\t\t<p className=\"m-0\">{masterConnected(this.props.garden) ? <span className=\"text-success\">Connected</span> : <span className=\"text-danger\">Not found</span>}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-auto\" onClick={() => { this.setState({ visible: !this.state.visible }) }}>\n\t\t\t\t\t\t<i className={\"material-icons font-size-large text-primary dropdown-icon \" + (this.state.visible ? \"dropdown-icon-rotate\" : \"\")}>keyboard_arrow_right</i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{[this.props.garden.master, ...this.props.garden.devices].map((value, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Device visible={this.state.visible} device={devicebyindex(this.context.gardens[this.props.idx], index)} key={index} updateGardens={this.props.updateGardens} index={index} master={this.context.gardens[this.props.idx].master}\n\t\t\t\t\t\t\tupdateDevice={(newdevice) => {\n\t\t\t\t\t\t\t\tif (index == 0) {\n\t\t\t\t\t\t\t\t\tthis.context.gardens[this.props.idx].master = newdevice;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tthis.context.gardens[this.props.idx].devices[index - 1] = newdevice;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.props.updateGardens(this.context.gardens);\n\t\t\t\t\t\t\t}} flashmaster={() => {\n\t\t\t\t\t\t\t\tconsole.log(\"????\")\n\t\t\t\t\t\t\t\tthis._masterflashref.current.flash();\n\t\t\t\t\t\t\t}} updateGardens={this.props.updateGardens} idx={this.props.idx}></Device>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t< Popup ref={this._editGardenPopup} shown={() => {\n\t\t\t\t\tthis.setState({ addNewDeviceStage: \"\" });\n\t\t\t\t}}>\n\t\t\t\t\t{/* here, we should be able to edit the name of this garden, the wifi username and password of this garden [TODO], and see connection info */}\n\t\t\t\t\t< h5 >\n\t\t\t\t\t\t<Editable value={this.props.garden.name} update={(val) => {\n\t\t\t\t\t\t\tlet newgardens = this.context.gardens;\n\t\t\t\t\t\t\tconsole.log(this.context);\n\t\t\t\t\t\t\tconsole.log(this.props.idx);\n\t\t\t\t\t\t\tnewgardens[this.props.idx].name = val;\n\t\t\t\t\t\t\tthis.props.updateGardens(newgardens);\n\t\t\t\t\t\t}}></Editable>\n\t\t\t\t\t</h5 >\n\t\t\t\t\t<br />\n\t\t\t\t\t<p>Connection status: <span className={this.props.garden.master.connInfo.connected ? \"text-success\" : \"text-danger\"}>{(this.props.garden.master.connInfo.connected ? \"Connected\" : \"Not found\") + \" \"}</span>\n\t\t\t\t\t\t<Flash ref={this._masterflashref} icon=\"sync\"></Flash>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>If you have changed network (like when you have finished setting this device up) or if you cannot access the device, you can try searching for it.</p>\n\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.search}>Search for the device</button>\n\t\t\t\t\t{(this.state.searching ? <p>Searching... ({this.state.searchfounds}/{this.state.searchnum})</p> : null)}\n\t\t\t\t\t{(this.state.searchingfound ? <p>Found!</p> : null)}\n\t\t\t\t\t<p></p>\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tlet newgardens = this.context.gardens;\n\t\t\t\t\t\t\tnewgardens.splice(this.props.idx, 1);\n\t\t\t\t\t\t\tthis.props.updateGardens(newgardens);\n\t\t\t\t\t\t}\n\t\t\t\t\t}>Delete</button>\n\t\t\t\t\t<p>Deleting the device will not turn it off - you can still re-add it if it is turned on.</p>\n\t\t\t\t\t<p></p>\n\t\t\t\t\t<h6>Add a new device to this garden</h6>\n\t\t\t\t\t{\n\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\tswitch (this.state.addNewDeviceStage) {\n\t\t\t\t\t\t\t\tcase \"connslave\":\n\t\t\t\t\t\t\t\t\treturn (<div>\n\t\t\t\t\t\t\t\t\t\t<p>Connect to the WiFi network of the device that you want to add</p>\n\t\t\t\t\t\t\t\t\t\t<p>Your WiFi network should look like \"AutoGarden-XXXXXXXX\"</p>\n\t\t\t\t\t\t\t\t\t\t<p>Enter the password of the main board of this garden below</p>\n\t\t\t\t\t\t\t\t\t\t<p><input onChange={(e) => { this.setState({ masterpassword: e.target.value }) }} /></p>\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.setupconnslave}>Connect</button> <Post ref={this._connslavepost}></Post>\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => { this.setState({ addNewDeviceStage: \"rstslave\" }) }}>Next</button>\n\t\t\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"rstslave\":\n\t\t\t\t\t\t\t\t\treturn (<div>\n\t\t\t\t\t\t\t\t\t\t<p>The device may need to restart to set up</p>\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.setuprstslave}>Update</button> <Post ref={this._rstslavepost}></Post>\n\t\t\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"addtomaster\":\n\t\t\t\t\t\t\t\t\treturn (<div>\n\t\t\t\t\t\t\t\t\t\t<p>Now, connect back to your original network. This garden should be connected.</p>\n\t\t\t\t\t\t\t\t\t\t<p>Then, press the button below to finish the process.</p>\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.setupaddtomaster}>Finish</button> <Post ref={this._addtomasterpost}></Post>\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t{ this.state.finished ? <p>All done! Close this window to manage your device.</p> : null}\n\t\t\t\t\t\t\t\t\t\t<p>{this.state.error}</p>\n\t\t\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\taddNewDeviceStage: \"connslave\",\n\t\t\t\t\t\t\t\t\t\tboardname: null,\n\t\t\t\t\t\t\t\t\t\tmac: null,\n\t\t\t\t\t\t\t\t\t\tsettings: {},\n\t\t\t\t\t\t\t\t\t\terror: \"\",\n\t\t\t\t\t\t\t\t\t\tboardip: \"\",\n\t\t\t\t\t\t\t\t\t\tfinished: false\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t//this._connslavepost.reset();\n\t\t\t\t\t\t\t\t\t//this._rstslavepost.reset();\n\t\t\t\t\t\t\t\t\t//this._addtomasterpost.reset();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()\n\t\t\t\t\t}\n\t\t\t\t</Popup >\n\t\t\t</div >\n\t\t)\n\t}\n}\n\nclass GardenList extends React.Component {\n\tstatic contextType = globalStateContext;\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"main-box\">\n\t\t\t\t{this.context.gardens.map((value, index) => {\n\t\t\t\t\treturn <Garden updateGardens={this.props.updateGardens} garden={value} key={index} idx={index} />\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar storage = window.localStorage;\n\t\tvar value = storage.getItem(\"settings\"); // Pass a key name to get its value.\n\t\tif (value == null) {\n\t\t\tstorage.setItem(\"settings\", JSON.stringify({\n\t\t\t\tgardens: []\n\t\t\t}));\n\t\t\tvalue = storage.getItem(\"settings\");\n\t\t}\n\t\tthis._addDevicePopup = React.createRef();\n\t\tthis.search = this.search.bind(this);\n\t\tthis.addBoard = this.addBoard.bind(this);\n\t\tthis.updateGardens = this.updateGardens.bind(this);\n\t\tthis.setupConnectTo = this.setupConnectTo.bind(this);\n\t\tthis.setupWifiSettings = this.setupWifiSettings.bind(this);\n\t\tthis.finishSetup = this.finishSetup.bind(this);\n\t\tthis.searchEnabledTimeout = null;\n\t\tthis._wifisetupflash = React.createRef();\n\t\tthis.setState = this.setState.bind(this);\n\t\tthis.wificheckinterval;\n\t\tthis.state = {\n\t\t\tsearchEnabled: true,\n\t\t\tsearchbegun: false,\n\t\t\tsearchfounds: 0,\n\t\t\tsearchnum: 0,\n\t\t\taddDeviceDivVisible: false,\n\t\t\taddDeviceSearch: false,\n\t\t\taddDeviceNew: false,\n\t\t\taddDeviceStage: \"checkconnectingmaster\",\n\n\t\t\tconnecting: false,\n\t\t\twentwrong: false,\n\t\t\tlocalip: null,\n\t\t\tsendingwififailed: false,\n\t\t\twifiname: \"\",\n\t\t\twifipwd: \"\",\n\t\t\tsendingrestart: false,\n\t\t\tcomplete: false,\n\t\t\tbname: \"\",\n\t\t\tsettingsdoc: {},\n\n\t\t\tsearchResults: [],\n\t\t\tctx: JSON.parse(value),\n\t\t\tboardbeingadded: null,\n\t\t\tboardbeingaddedErr: false,\n\t\t\tboardbeingaddedSuccess: false,\n\t\t\tretrievedData: {}\n\t\t};\n\t}\n\n\tsaveState() {\n\t\tvar storage = window.localStorage;\n\t\tstorage.setItem(\"settings\", JSON.stringify(this.state.ctx));\n\t\tconsole.log(this.state.ctx);\n\t}\n\n\tupdateGardens(newgardens) {\n\t\tconsole.log(newgardens);\n\t\tthis.state.ctx.gardens = newgardens;\t// TODO - this is definitely not how contexts are supposed to be used\n\t\tconsole.log(this.state.ctx);\n\t\tthis.setState({ ctx: this.state.ctx }, () => {\n\t\t\tconsole.log(this.state.ctx);\n\t\t\tthis.saveState();\n\t\t});\n\t}\n\tasync search() {\n\t\tif (this.state.searchEnabled) {\n\t\t\tthis.setState({ searchResults: [], searchEnabled: false, searchEnabledTimeout: setTimeout(() => { this.setState({ searchEnabled: true }) }, 5000), searchnum: await ipSpace(), searchbegun: true, searchfounds: 0 });\n\t\t\tsearchIPS((httpip) => {\n\t\t\t\tconsole.log(httpip);\n\t\t\t\tfetch(httpip, getOptions)\n\t\t\t\t\t.then(response => response.text())\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t// verify the response\n\t\t\t\t\t\tif (isBoardname(response)) {\n\t\t\t\t\t\t\t// valid board\n\t\t\t\t\t\t\tthis.setState((prevState, props) => {\n\t\t\t\t\t\t\t\tlet searchresults = this.state.searchResults;\n\t\t\t\t\t\t\t\tsearchresults.push({\n\t\t\t\t\t\t\t\t\tboardname: response,\n\t\t\t\t\t\t\t\t\tip: httpip\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tsearchResults: searchresults\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.log(err))\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tthis.setState((prevState, props) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tsearchfounds: prevState.searchfounds + 1\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\tsetLED(httpip) {\n\t\ttimeout(5000, fetch(httpip + \"setlighting\", makePostOptions({\n\t\t\tr: 255,\n\t\t\tg: 123,\n\t\t\tb: 0,\n\t\t\ttime: 7\n\t\t})))\n\t\t\t.then(response => response.text())\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t});\n\t}\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.searchEnabledTimeout);\n\t}\n\tasync addBoard(idx, httpip) {\n\t\tthis.setState({ boardbeingadded: idx, retrievedData: {}, boardbeingaddedErr: false, boardbeingaddedSuccess: false });\n\t\t// retrieve data\n\t\t// i'd like: mac, ip (but we should already have that) and child devices\n\t\t// also, force a state change to master\n\t\t//let boardnameres, macres, devicesres, stateres\n\t\ttry {\n\t\t\tlet settingsPromise = await timeout(15000, fetch(httpip + \"settings\", getOptions)).then(response => response.text());\n\t\t\tlet macPromise = await timeout(15000, fetch(httpip + \"mac\", getOptions)).then(response => response.text());\n\t\t\tlet devicesPromise = await timeout(15000, fetch(httpip + \"devices\", getOptions)).then(response => response.text());\n\t\t\t//let statePromise = await fetch(httpip + \"setstate\", makePostOptions({\n\t\t\t// \tisSlave: 0\n\t\t\t//})).then(response => response.text());\n\n\t\t\t//Promise.all([boardnamePromise, macPromise, devicesPromise, statePromise]).then((result) => {\n\t\t\t//let results = [\"AutoGarden-HEV1OE4M\", \"30:AE:A4:07:0D:66\", \"C4:4F:33:75:7A:B1: AutoGarden-ST31LMY3\\n\", null];\n\t\t\tlet results = [settingsPromise, macPromise, devicesPromise];\n\t\t\tconsole.log(results);\n\t\t\tlet masterboard = {\n\t\t\t\tmaster: true,\n\t\t\t\thumanname: JSON.parse(results[0]).boardname,\n\t\t\t\tboardname: JSON.parse(results[0]).boardname,\n\t\t\t\tlastip: httpip,\n\t\t\t\tmac: results[1].toUpperCase(),\n\t\t\t\tconnInfo: {\n\t\t\t\t\tconnected: true\n\t\t\t\t},\n\t\t\t\tsettings: JSON.parse(results[0]),\n\t\t\t\treadings: {\n\t\t\t\t\tmoisture: 0,\n\t\t\t\t\ttemperature: 0,\n\t\t\t\t\tsunlight: 0\n\t\t\t\t},\n\t\t\t\twatering: {\n\t\t\t\t\t\"watering\": false,\n\t\t\t\t\t\"reason\": '_',\n\t\t\t\t\t\"cooldownleft\": -1\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet devicesarr = [];\n\t\t\tlet deviceslist = results[2].split(\"\\n\");\n\t\t\tlet promises = [];\n\t\t\tdeviceslist.pop();\n\t\t\tfor (let device of deviceslist) {\n\t\t\t\tlet dSplit = device.split(\" \");\n\t\t\t\tlet currmac = dSplit[0].slice(0, -1).toUpperCase();\n\t\t\t\tlet dBoardname = dSplit[1];\n\t\t\t\t// attempt to access the board\n\t\t\t\tpromises.push(\n\t\t\t\t\ttimeout(15000, fetch(httpip + \"forward\", makePostOptions({\n\t\t\t\t\t\tboardname: dBoardname,\n\t\t\t\t\t\tpostjson: \"null\",\n\t\t\t\t\t\tpost: \"0\",\n\t\t\t\t\t\turl: \"/settings\"\n\t\t\t\t\t})))\n\t\t\t\t\t\t.then(response => response.text())\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t\t// parse the settings json\n\t\t\t\t\t\t\tdevicesarr.push({\n\t\t\t\t\t\t\t\tmaster: false,\n\t\t\t\t\t\t\t\thumanname: dBoardname,\n\t\t\t\t\t\t\t\tboardname: dBoardname,\n\t\t\t\t\t\t\t\tlastip: null,\n\t\t\t\t\t\t\t\tmac: currmac,\n\t\t\t\t\t\t\t\tconnInfo: {\n\t\t\t\t\t\t\t\t\tconnected: isSettings(getForwardData(response).response)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsettings: JSON.parse(getForwardData(response).response),\n\t\t\t\t\t\t\t\treadings: {\n\t\t\t\t\t\t\t\t\tmoisture: 0,\n\t\t\t\t\t\t\t\t\ttemperature: 0,\n\t\t\t\t\t\t\t\t\tsunlight: 0\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\twatering: {\n\t\t\t\t\t\t\t\t\t\"watering\": false,\n\t\t\t\t\t\t\t\t\t\"reason\": '_',\n\t\t\t\t\t\t\t\t\t\"cooldownleft\": -1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\tdevicesarr.push({\n\t\t\t\t\t\t\t\tmaster: false,\n\t\t\t\t\t\t\t\thumanname: dBoardname,\n\t\t\t\t\t\t\t\tboardname: dBoardname,\n\t\t\t\t\t\t\t\tlastip: null,\n\t\t\t\t\t\t\t\tmac: currmac,\n\t\t\t\t\t\t\t\tconnInfo: {\n\t\t\t\t\t\t\t\t\tconnected: false\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsettings: {},\n\t\t\t\t\t\t\t\treadings: {\n\t\t\t\t\t\t\t\t\tmoisture: 0,\n\t\t\t\t\t\t\t\t\ttemperature: 0,\n\t\t\t\t\t\t\t\t\tsunlight: 0\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\twatering: {\n\t\t\t\t\t\t\t\t\t\"watering\": false,\n\t\t\t\t\t\t\t\t\t\"reason\": '_',\n\t\t\t\t\t\t\t\t\t\"cooldownleft\": -1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\n\t\t\t\t);\n\t\t\t}\n\t\t\tPromise.all(promises).then((res) => {\n\t\t\t\tthis.state.ctx.gardens.push({\n\t\t\t\t\tname: \"New Garden\",\n\t\t\t\t\tmaster: masterboard,\n\t\t\t\t\tdevices: devicesarr\n\t\t\t\t});\n\t\t\t\tconsole.log(JSON.stringify(this.state));\n\t\t\t\tthis.setState({ ctx: this.state.ctx, boardbeingaddedSuccess: true }, () => {\n\t\t\t\t\tthis.saveState();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthis.setState({ boardbeingaddedErr: true });\n\t\t}\n\t\t//}).catch((err) => {\n\t\t//\tthis.setState({ boardbeingaddedErr: true })\n\t\t//\tconsole.log(err);\n\t\t//})\n\t}\n\tsetupConnectTo() {\n\t\t// try both httpips\n\t\tlet p1 = timeout(10000, fetch(ip5 + \"settings\", getOptions).then(response => response.text())).catch(reason => { console.log(\"5nocon\"); return \"NOCONN\" });\n\t\tlet p2 = timeout(10000, fetch(ip6 + \"settings\", getOptions).then(response => response.text())).catch(reason => { console.log(\"6nocon\"); return \"NOCONN\" });\n\t\tPromise.all([p1, p2]).then((values) => {\n\t\t\tconsole.log(values);\n\t\t\tif (isSettings(values[0])) {\n\t\t\t\tthis.setState({ localip: ip5, connecting: false, bname: JSON.parse(values[0]).boardname, settingsdoc: JSON.parse(values[0]), addDeviceStage: \"setupmaster1\" });\n\t\t\t}\n\t\t\telse if (isSettings(values[1])) {\n\t\t\t\tthis.setState({ localip: ip6, connecting: false, bname: JSON.parse(values[1]).boardname, settingsdoc: JSON.parse(values[1]), addDeviceStage: \"setupmaster1\" });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({ wentwrong: true, connecting: false });\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\tconnecting: true, wentwrong: false\n\t\t});\n\t}\n\tsetupWifiSettings() {\n\t\t// send a setwifi\n\t\tconsole.log(this.state);\n\t\tfetch(this.state.localip + \"setwifi\", makePostOptions({\n\t\t\tssid: this.state.wifiname,\n\t\t\tpassword: this.state.wifipwd\n\t\t})).then(response => response.text()).then(response => {\n\t\t\tthis.setState({ sentwifi: true, wifistatusnoconn: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tfetch(this.state.localip + \"connected\", getOptions).then(response => response.text()).then((response) => {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tif (response == \"YES\") {\n\t\t\t\t\t\tthis.setState({ wifistatusconn: true, wifistatusnoconn: false });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.setState({ wifistatusconn: false, wifistatusnoconn: true });\n\t\t\t\t\t}\n\t\t\t\t\tthis._wifisetupflash.current.flash();\n\t\t\t\t})\n\t\t\t}, 4000)\n\t\t}).catch(reason => {\n\t\t\tconsole.log(reason);\n\t\t\tthis.setState({ sendingwififailed: true });\n\t\t});\n\t\tthis.setState({\n\t\t\tsendingwifi: true,\n\t\t\tsendingwififailed: false,\n\t\t\tsentwifi: false,\n\t\t\twifistatusconn: false,\n\t\t\twifistatusnoconn: false\n\t\t});\n\t}\n\tfinishSetup() {\n\t\t// send the setstate\n\t\tthis.setState({ sendingrestart: true });\n\t\tfetch(this.state.localip + \"setstate\", makePostOptions({\n\t\t\tisSlave: \"0\"\n\t\t})).finally(() => {\n\t\t\tthis.setState({ complete: true });\n\t\t\t// add the garden\n\t\t\tlet gardencp = this.state.ctx.gardens;\n\t\t\tgardencp.push({\n\t\t\t\tname: \"New Garden\",\n\t\t\t\tmaster: {\n\t\t\t\t\tmaster: true,\n\t\t\t\t\thumanname: this.state.bname,\n\t\t\t\t\tboardname: this.state.bname,\n\t\t\t\t\tlastip: \"http://errresolve/\",\n\t\t\t\t\tmac: \"_\",\n\t\t\t\t\tconnInfo: {\n\t\t\t\t\t\tconnected: true\n\t\t\t\t\t},\n\t\t\t\t\tsettings: this.state.settingsdoc,\n\t\t\t\t\t\"readings\": {\n\t\t\t\t\t\t\"moisture\": 0,\n\t\t\t\t\t\t\"temperature\": 0,\n\t\t\t\t\t\t\"sunlight\": 0\n\t\t\t\t\t},\n\t\t\t\t\twatering: {\n\t\t\t\t\t\t\"watering\": false,\n\t\t\t\t\t\t\"reason\": '_',\n\t\t\t\t\t\t\"cooldownleft\": -1\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdevices: []\n\t\t\t})\n\t\t\tthis.saveState();\n\t\t\tthis.setState({ ctx: this.state.ctx });\n\t\t});\n\t}\n\trender() {\n\t\tlet statectx = this.state.ctx;\n\t\tconsole.log(this.props.networkinterface);\n\t\tstatectx[\"networkinterface\"] = this.props.networkinterface;\n\t\tlet addDeviceSearchDiv = (this.state.addDeviceSearch ? (<div className=\"container p-2\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t<h6>Search for devices</h6>\n\t\t\t\t\t<button className={\"btn btn-primary w-100 \" + (this.state.searchEnabled ? \"\" : \"disabled\")} onClick={this.search}>Search</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{this.state.searchbegun ? <p>Searching... ({this.state.searchfounds}/{this.state.searchnum})</p> : null}\n\t\t\t{this.state.searchResults.map((value, index) => {\n\t\t\t\treturn (<div className=\"row\">\n\t\t\t\t\t<div className=\"col-auto p-2\">\n\t\t\t\t\t\t<p>{value.boardname}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-auto ml-auto p-2\">\n\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={() => { this.setLED(value.ip) }}>Turn on LED</button> <button className=\"btn btn-primary\" onClick={() => { this.addBoard(index, value.ip) }}>Add garden</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={\"col-12 \" + (this.state.boardbeingadded == index ? \"\" : \"d-none\")}>\n\t\t\t\t\t\tRetrieving data... <br />\n\t\t\t\t\t\t{(this.state.boardbeingaddedErr ? \"Something went wrong\" : \"\")}\n\t\t\t\t\t\t{(this.state.boardbeingaddedSuccess ? \"Garden was sucessfully added! Close this dialog to manage it.\" : \"\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>)\n\t\t\t})}\n\t\t</div>) : null);\n\t\tlet addDeviceNewDiv = null;\n\t\tif (this.state.addDeviceNew) {\n\t\t\tconsole.log(this.state.addDeviceStage);\n\t\t\tconsole.log(this.state.addDeviceStage == \"restart\");\n\t\t\tswitch (this.state.addDeviceStage) {\n\t\t\t\tcase \"checkconnectingmaster\":\n\t\t\t\t\taddDeviceNewDiv = (<div className=\"container p-2\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t<h6>Set up the master</h6>\n\t\t\t\t\t\t\t\t<p>Connect to the WiFi network of the valve <b>closest to your router.</b></p>\n\t\t\t\t\t\t\t\t<p>Your WiFi network should look like \"AutoGarden-XXXXXXXX\"</p>\n\t\t\t\t\t\t\t\t<button onClick={this.setupConnectTo}>Connect to the board</button>\n\t\t\t\t\t\t\t\t{(this.state.connecting ? <p>Connecting...</p> : null)}\n\t\t\t\t\t\t\t\t{(this.state.wentwrong ? <p>Couldn't connect.</p> : null)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>)\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"setupmaster1\":\n\t\t\t\t\taddDeviceNewDiv = (<div className=\"container p-2\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t<h6>Set up WiFi</h6>\n\t\t\t\t\t\t\t\t<p>Enter the name and password of your router's WiFi</p>\n\t\t\t\t\t\t\t\t<p>Name: <input onChange={(e) => { this.setState({ wifiname: e.target.value }); }} /></p> {/* TODO: find the names of ssides */}\n\t\t\t\t\t\t\t\t<p>Password: <input onChange={(e) => { this.setState({ wifipwd: e.target.value }); }} /></p>\n\t\t\t\t\t\t\t\t<button onClick={this.setupWifiSettings}>Update WiFi</button>\n\t\t\t\t\t\t\t\t{(this.state.sendingwifi ? <p>Sending WiFi credentials...</p> : null)}\n\t\t\t\t\t\t\t\t{(this.state.sendingwififailed ? <p>Error in sending WiFi credentials!</p> : null)}\n\t\t\t\t\t\t\t\t{(this.state.sentwifi ? <p>Sent WiFi credentials...<br />Checking WiFi status</p> : null)}\n\t\t\t\t\t\t\t\t<p>{(this.state.wifistatusconn ? <span>Connected! </span> : null)}\n\t\t\t\t\t\t\t\t\t{(this.state.wifistatusnoconn ? <span>Not connected </span> : null)} <Flash icon=\"sync\" ref={this._wifisetupflash}></Flash></p>\n\n\t\t\t\t\t\t\t\t{(true ? <button className=\"btn btn-primary\" onClick={() => { this.setState({ addDeviceStage: \"restart\" }) }}>Next</button> : null)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>)\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"restart\":\n\t\t\t\t\tconsole.log(\"here?\");\n\t\t\t\t\taddDeviceNewDiv = (<div className=\"container p-2\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t<h6>Finishing up</h6>\n\t\t\t\t\t\t\t\t<p>The device may need to restart to finish setting up.</p>\n\t\t\t\t\t\t\t\t<button onClick={this.finishSetup}>Finish</button>\n\t\t\t\t\t\t\t\t{(this.state.sendingrestart ? <p>Finishing up...</p> : null)}\n\t\t\t\t\t\t\t\t{(this.state.complete ? <p>All done! Close this window to manage your valve.</p> : null)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>)\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.setState({ addDeviceStage: \"checkconnectingmaster\" })\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<globalStateContext.Provider value={statectx}>\n\t\t\t\t<div className=\"main-wrapper\">\n\t\t\t\t\t<HeaderRow />\n\t\t\t\t\t<GardenList updateGardens={this.updateGardens} />\n\t\t\t\t\t<div className=\"buttonsDiv\">\n\t\t\t\t\t\t<div onClick={() => { this._addDevicePopup.current.showPopup() }}><i className={\"material-icons font-size-large cursor-pointer \" + (this.state.searchEnabled ? \"\" : \"text-muted\")}>add_circle</i></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Popup ref={this._addDevicePopup}>\n\t\t\t\t\t<h5>Add a new garden</h5>\n\t\t\t\t\t<div className=\"w-50 d-inline-block p-2\">\n\t\t\t\t\t\t<button onClick={() => { this.setState({ addDeviceSearch: true, addDeviceNew: false }); }} className=\"btn btn-primary w-100\">Set up an existing garden</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"w-50 d-inline-block p-2\">\n\t\t\t\t\t\t<button onClick={() => { this.setState({ addDeviceSearch: false, addDeviceNew: true, addDeviceStage: \"checkconnectingmaster\" }) }} className=\"btn btn-primary w-100\">Set up a new garden</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{addDeviceSearchDiv}\n\t\t\t\t\t{addDeviceNewDiv}\n\t\t\t\t</Popup>\n\t\t\t</globalStateContext.Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}